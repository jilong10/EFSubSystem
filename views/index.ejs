<% include ./partials/header %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js"></script>
<div class="row">
	<% if (data.Crisis != null) { %>
	<div class="status animated fadeInDown">	
		<% data.Crisis.forEach(crisis => { %>	
		<div class="row">			
			<div class="col-lg-6">
				<h1>
					Current Status
					<% if (data.DeploymentUnitStatus.backup) { %>
						<span class="badge badge-danger">Request Backup</span>
					<% } else if (data.DeploymentUnitStatus.cleanup) { %>
						<span class="badge badge-warning">Request Cleanup</span>
					<% } %>
				</h1>				
			</div>			
		</div>	
		<div class="row">
			<div class="col-lg-10 col-md-8">
				<button type="button" class="btn btn-primary" onclick="sendStatusUpdate()">Send Status Update</button>			
			</div>			
		</div>
		<% }); %>	
	</div>	
	<% } else { %>
		<div class="status animated fadeInDown">		
			<div class="row">			
				<div class="col-lg-6">
					<h1>Current Status</h1>				
				</div>			
			</div>	
		</div>	
	<% } %>
</div>

<% if (data.Crisis != null) { %>
<div class="card mb-3 animated fadeInUpBig">
	<div class="card-header">		
		<div class="row">
			<div class="col-lg-8">
				<h3>
					Current Map Status
				</h3>				
			</div>					
		</div>			
	</div>	
	<div class="card-body">		
		<div class="row">
			<div class="col-lg-12">
				<div class="mapholder">
					<div id="map"></div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="card mb-3 animated fadeInUpBig">
	<div class="card-header">
		<% data.Crisis.forEach(crisis => { %>	
		<div class="row">
			<div class="col-lg-8">
				<h3>
					Code 													
					<% if (String(crisis.crisisCode).toUpperCase() == 'GREEN') { %>
						<span class="badge badge-secondary green"><%= crisis.crisisCode %></span>
					<% } else if (String(crisis.crisisCode).toUpperCase() == 'YELLOW') { %>
						<span class="badge badge-secondary yellow"><%= crisis.crisisCode %></span>
					<% } else if (String(crisis.crisisCode).toUpperCase() == 'ORANGE') { %>
						<span class="badge badge-secondary orange"><%= crisis.crisisCode %></span>
					<% } else if (String(crisis.crisisCode).toUpperCase() == 'RED') { %>
						<span class="badge badge-danger"><%= crisis.crisisCode %></span>
					<% } %>		
					<span class="badge badge-info">$<%= data.DeploymentUnitCost.totalCost %></span>
				</h3>				
			</div>
			<div class="col-auto">
				<h3>
					<button type="button" class="btn btn-secondary">
						Injuries <span class="badge badge-light"><label class="unit-label"><%= crisis.noOfInjuries %></label></span>
					</button>
					<button type="button" class="btn btn-dark">
						Deaths <span class="badge badge-light"><label class="unit-label"><%= crisis.noOfDeaths %></label></span>
					</button>
				</h3>
			</div>						
		</div>	
		<% }); %>			
	</div>	
	<div class="card-body">		
		<div class="row">
			<% if (data.DeploymentUnit != null) { %>
			<div class="col-md-6">
				<canvas id="myDoughnutChart" width="100" height="100"></canvas>
			</div>
			<% } %>
			<div class="col-md-6">
				<canvas id="myDoughnutChart2" width="100" height="100"></canvas>
			</div>
		</div>
	</div>
</div>
<% } else { %>
	<div class="card mb-3 animated fadeInUpBig">
	<div class="card-header">
		
		<div class="row">
			<div class="col-lg-8">
				<h3>
					No crisis								
				</h3>				
			</div>	
		</div>				
	</div>	
	<div class="card-body">
		<div class="row">
			<div class="col-md-6">
				<h5>No deployment unit and enemy</h5>
			</div>
		</div>
	</div>
</div>
<% } %>

<script>	
	<% if (data.DeploymentUnit != null) { %>	
	function smoothZoom (map, max, cnt) {
		if (cnt >= max) {
			return;
		}
		else {
			z = google.maps.event.addListener(map, 'zoom_changed', function(event){
				google.maps.event.removeListener(z);
				smoothZoom(map, max, cnt + 1);
			});
			setTimeout(function(){map.setZoom(cnt)}, 80);
		}
	}  

	function initMap() {
		let centerOfSingapore = {lat: 1.3521, lng: 103.8198};

		let map = new google.maps.Map(document.getElementById('map'), {
			zoom: 11,
			center: centerOfSingapore
		});		

		<% data.Crisis.forEach(crisis => { 
			crisis.Enemy.forEach((enemy, i) => { %>
				window.setTimeout(function() {
					let coordinate = {lat: <%= enemy.coordinateX %>, lng: <%= enemy.coordinateY %>};
					let marker = new google.maps.Marker({
						position: coordinate,
						map: map,
						draggable: true,
						animation: google.maps.Animation.DROP,
						title: `<%= enemy.enemyName %> (<%= enemy.enemySize %>)`
					});

					let infowindow = new google.maps.InfoWindow({
						content: `<h6><%= enemy.enemyName %> <span class="badge badge-secondary"><%= enemy.enemyType %></span></h6>
									<p>Enemy Size: <%= enemy.enemySize %></p>`
					});

					marker.addListener('click', function() {
						infowindow.open(map, marker);
					});

					marker.addListener('rightclick', function() {
						map = marker.getMap();	
						map.setCenter(coordinate);
						smoothZoom(map, 19, map.getZoom());						
					});

					let affectAreaCircle = new google.maps.Circle({
						strokeColor: '#FF0000',
						strokeOpacity: 0.8,
						strokeWeight: 2,
						fillColor: '#FF0000',
						fillOpacity: 0.35,
						map: map,
						draggable: true,
						center: coordinate,
						radius: <%= enemy.affectArea %>
					});					

					marker.bindTo('position', affectAreaCircle, 'center');

					marker.addListener('dragend', function(e) {
						let latLng = e.latLng;
						let target = `./api/statusupdate/crisis/<%= crisis.id %>/<%= enemy.enemyName %>/updatecoordinate`;
						
						$.ajax({
							url: target,
							type: 'PUT',
							data: { coordinate_x: latLng.lat(), coordinate_y: latLng.lng() },
							success: function(msg) {            
								if (msg.success) {
									//to check return message to confirm successful
									showNotification('success', msg.message);
								} else {
									showNotification('danger', msg.message);
								}            
							},
							error: function() {
								showNotification('danger', 'Update Failed');
							}
						});
					});
				}, <%= i %>*1000);
			<% }); %>							
		<% }); %>

		<% data.DeploymentUnit.forEach((deploymentunit, i) => { %>
			window.setTimeout(function() {
					let coordinate = {lat:<%= deploymentunit.coordinateX %>, lng: <%= deploymentunit.coordinateY %>};
					let marker = new google.maps.Marker({
						icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
						position: coordinate,
						draggable: true,
						map: map,
						animation: google.maps.Animation.DROP,
						title: `<%= deploymentunit.unitName %> (<%= deploymentunit.currentUnitSize %>)`
					});

					let infowindow = new google.maps.InfoWindow({
						content: `<h6><%= deploymentunit.unitName %> <span class="badge badge-secondary"><%= deploymentunit.unitType %></span></h6>
									<p>Current Unit Size: <%= deploymentunit.currentUnitSize %></p>`
					});

					marker.addListener('click', function() {						
						infowindow.open(map, marker);
					});

					marker.addListener('rightclick', function() {
						map = marker.getMap();
						map.setCenter(coordinate);
						smoothZoom(map, 19, map.getZoom());						
					});
			
					marker.addListener('dragend', function(e) {
						let latLng = e.latLng;
						let target = `./api/ordergenerator/deploymentunit/<%= deploymentunit.unitName %>/updatecoordinate`;
						
						$.ajax({
							url: target,
							type: 'PUT',
							data: { coordinate_x: latLng.lat(), coordinate_y: latLng.lng() },
							success: function(msg) {            
								if (msg.success) {
									//to check return message to confirm successful
									showNotification('success', msg.message);
								} else {
									showNotification('danger', msg.message);
								}            
							},
							error: function() {
								showNotification('danger', 'Update Failed');
							}
						});
					});
				}, <%= i %>*1000);
		<% }); %>
	}

	var ctx = document.getElementById("myDoughnutChart");
	//Total Deployed Units
	var myLineChart = new Chart(ctx, {
	  type: 'doughnut',
	  data: {
			datasets: [
			{
					data: [
						<% data.DeploymentUnit.forEach(deploymentunit => { %>
						<%= deploymentunit.currentUnitSize + deploymentunit.unitCasualty%>,
						<% }); %>
					],
					backgroundColor: [
						<% data.DeploymentUnit.forEach(deploymentunit => { 
							if (String(deploymentunit.unitType).toUpperCase() === 'AIR') { %>
								"rgba(189, 195, 199, 0.7)",
							<% } else if (String(deploymentunit.unitType).toUpperCase() === 'SEA') { %>
								"rgba(68, 108, 179, 0.7)",
							<% } else if (String(deploymentunit.unitType).toUpperCase() === 'LAND') { %>								
								"rgba(27, 188, 155, 0.7)",
							<% } else if (String(deploymentunit.unitType).toUpperCase() === 'QUARANTINE') { %>								
								"rgba(247, 202, 24, 0.7)",
							<% } else if (String(deploymentunit.unitType).toUpperCase() === 'CLEANUP') { %>								
								"rgba(108, 122, 137, 0.7)",
							<% } %>
						<% }); %>
					],
					label: "Total Deployed"
			},						
		],
			labels: [
				<% data.DeploymentUnit.forEach(deploymentunit => { %>
				"<%= deploymentunit.unitName %>",
				<% }); %>
			]},
			options: {
				responsive: true,
				legend: {
					position: 'top',
				},
				title: {
					display: true,
					text: 'Total Deployed Units',
					fontSize: 25
				},
				animation: {
					animateScale: true,
					animateRotate: true
				}
			}
		}
	);
	
	<% 
	} 

	if (data.Crisis != null) { 		
	%>
	//Enemy Units
	var ctx = document.getElementById("myDoughnutChart2");
	var myLineChart = new Chart(ctx, {
	  type: 'doughnut',
	  data: {
			datasets: [{
					data: [
						<% data.Crisis.forEach(crisis => { %>
							<% crisis.Enemy.forEach(enemy => { %>
								<%= enemy.enemySize %>,
							<% }); %>
						<% }); %>
					],
					backgroundColor: [
						<% data.Crisis.forEach(crisis => { 
							crisis.Enemy.forEach(enemy => {
								if (String(enemy.enemyType).toUpperCase() === 'AIR') { %>
									"rgba(228, 241, 254, 0.7)",
								<% } else if (String(enemy.enemyType).toUpperCase() === 'SEA') { %>
									"rgba(68, 108, 179, 0.7)",
								<% } else if (String(enemy.enemyType).toUpperCase() === 'LAND') { %>								
									"rgba(27, 188, 155, 0.7)",
								<% } %>
							<% }); %>							
						<% }); %>
					],
					label: [
						<% data.Crisis.forEach(crisis => { %>
							<% crisis.Enemy.forEach(enemy => { %>
								"<%= enemy.enemyName %>",
							<% }); %>
						<% }); %>
					]
				}],
			labels: [
				<% data.Crisis.forEach(crisis => { %>
					<% crisis.Enemy.forEach(enemy => { %>
						"<%= enemy.enemyName %>",
					<% }); %>
				<% }); %>
			]},
			options: {
				responsive: true,
				legend: {
					position: 'top',
				},
				title: {
					display: true,
					text: 'Total Enemies',
					fontSize: 25
				},
				animation: {
					animateScale: true,
					animateRotate: true
				}
			}
		}
	);
	<% } %>

</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAyIdfs0vc-3YxmgtoSgMGRhoeo8Xmd620&callback=initMap"></script>

<% include ./partials/footer %>